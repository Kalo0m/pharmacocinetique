import { Answer } from "@prisma/client";
import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data: question, refetch, isLoading } = trpc.questions.getQuestion.useQuery(undefined, { refetchOnWindowFocus: false });
  const [showSuccess, setShowSuccess] = useState(false);
  const [showFailure, setShowFailure] = useState(false);

  const onButtonClick = (answer: Answer) => {
    if (!question) return;
    if (answer.id === question.question?.answer?.id) {
      setShowSuccess(true);
    }
    else setShowFailure(true);
    setTimeout(() => {
      setShowFailure(false);
      setShowSuccess(false);
      refetch()
    }, 5000);
    return undefined
  }

  if (!question) return <div className="text-white">loading...</div>
  return (
    <>
      <Head>
        <title>Pharmacocinetique</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-auto  flex min-h-screen w-screen flex-col bg-gray-900 items-between justify-between p-4">
        {showSuccess && <div className="pyro">
          <div className="before"></div>
          <div className="after"></div>
        </div>}
        <div className="flex-grow flex flex-col items-center justify-center">
          <div style={{ animation: showSuccess || showFailure ? `bounce 1s ease` : '' }} className="h-36 mb-10 flex flex-col items-center">
            <p className="text-green-500 text-3xl font-bold">{showSuccess && 'Bravo'}</p>
            <p className="text-red-500 transition-all text-3xl scale-100 h-32 font-bold">{showFailure && 'IMT > Veto'}</p>
            {(showSuccess || showFailure) && <div className="text-xl text-gray-300 h-32 font-semibold text-center">La bonne réponse était <p className="mt-3 text-blue-400 font-bold">{question.question?.answer?.answer}</p></div>}

          </div>
          <h1 className="text-5xl font-extrabold leading-normal text-white md:text-[5rem]">
            <p className="text-center">{question?.question.molecule}</p>
          </h1>
          <h1 className="text-3xl mb-10 font-semibold leading-normal text-white md:text-[3rem]">
            <p className="text-center">{question?.question.question}</p>
          </h1>
          <div className="lg:flex-row flex flex-col gap-4">
            {question?.answers.map((answer) => (
              <button disabled={showSuccess || showFailure} onClick={() => onButtonClick(answer)} key={answer.id} className="inline-flex w-full justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-base font-medium text-white shadow-sm transition-all hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm">
                {answer.answer}
              </button>
            ))}
          </div>
        </div>



      </main>
    </>
  );
};

export default Home;

